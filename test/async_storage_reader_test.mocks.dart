// Mocks generated by Mockito 5.4.4 from annotations
// in async_storage_reader/test/async_storage_reader_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:async_storage_reader/src/ios_storage.dart' as _i4;
import 'package:async_storage_reader/src/platform_checker.dart' as _i5;
import 'package:async_storage_reader/src/sqlite_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SQLiteStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSQLiteStorage extends _i1.Mock implements _i2.SQLiteStorage {
  MockSQLiteStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String?> getItemFromSQLite(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getItemFromSQLite,
          [key],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<Map<String, String>> getAllItemsFromSQLite() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllItemsFromSQLite,
          [],
        ),
        returnValue: _i3.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i3.Future<Map<String, String>>);

  @override
  _i3.Future<bool> removeItemFromSQLite(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeItemFromSQLite,
          [key],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> clearSQLite() => (super.noSuchMethod(
        Invocation.method(
          #clearSQLite,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [IOSStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOSStorage extends _i1.Mock implements _i4.IOSStorage {
  MockIOSStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initializeIOSAsyncStoragePath() => (super.noSuchMethod(
        Invocation.method(
          #initializeIOSAsyncStoragePath,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getItemFromIOSAsyncStorage(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getItemFromIOSAsyncStorage,
          [key],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<Map<String, String>> getAllItemsFromIOSAsyncStorage() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllItemsFromIOSAsyncStorage,
          [],
        ),
        returnValue: _i3.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i3.Future<Map<String, String>>);

  @override
  _i3.Future<bool> removeItemFromIOSAsyncStorage(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeItemFromIOSAsyncStorage,
          [key],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> clearIOSAsyncStorage() => (super.noSuchMethod(
        Invocation.method(
          #clearIOSAsyncStorage,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [PlatformChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformChecker extends _i1.Mock implements _i5.PlatformChecker {
  MockPlatformChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAndroid => (super.noSuchMethod(
        Invocation.getter(#isAndroid),
        returnValue: false,
      ) as bool);

  @override
  bool get isIOS => (super.noSuchMethod(
        Invocation.getter(#isIOS),
        returnValue: false,
      ) as bool);
}
